<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[扩展hexo]]></title>
      <url>%2F2016%2F12%2F14%2Fextend-hexo%2F</url>
      <content type="text"><![CDATA[hexo默认主题使用landscape, 个人觉得不太好看, 但是hexo支持自定义主题, 也可以使用别人定制好的,可以去hexo主题寻找自己喜欢的主题, 个人使用Next主题 使用Next主题官方的使用方法是在themes目录下直接clone Next源码, 但这样有个问题, 就是多PC更新时的主题同步, 所以推家大家去官网上直接下载压缩包,当然官网也提出了解决方案, 具体可以去官网查看, 如果你git用的比较熟, 还是推荐官网做法 启用主题打开站点配置文件, 找到theme字段, 并将其值改为next切换主题后, 最好使用hexo clean来清除Hexo的缓存 验证站点hexo s –debug, 来查看站点是否正确运行 主题设定选择SchemeScheme是Next提供的一种特性, 借助于Scheme, 可以提供多种不同的外观, 目前Next支持三种Scheme, 他们是: Muse 默认Scheme, 这是Next最初的版本 Mist Muse的紧凑版本 Pisces 双栏Scheme, 目测这个用的最多 Scheme的切换可以通过更改主题配置文件来修改, 搜索scheme关键字, 打开自己喜欢的注释即可 设置菜单菜单配置包括三部分, 第一是菜单项(名称和连接), 第二是菜单项的显示文本, 第三是菜单项对应的图标 编辑主题配置文件, 修改一下内容 设定菜单内容, 对应的字段是menu, 菜单内容的设置格式是: item name: link, 其中 item name 是一个名称,这个名称并不直接显示在页面上, 而是用于匹配图标既翻译 Next默认的菜单项有(标注❗️项表示需要手动创建这个页面): 键值 设定值 显示文本 home home: / 主页 archives archives: /archives 归档 categories categories: /categories 分类❗️ tags tags: /tags 标签页❗️ about about: /about 关于❗️ commonweal commonweal: /404.html 公益404❗️ 设置菜单项的显示文本.在第一步中设置的菜单名称并不直接用于界面上的展示,Hexo在生成的时候使用这个名称去找对应的翻译,这些翻译文本在Next主题目录下的languages/{language}.yml中 设定菜单项的图标, 对应的字段是menu_icons. 此设定格式是item name: icon name, 其中item name与上一步所配置的菜单名字对应, icon name 是Font Awesome图标的名字, 而enable可用于控制是否显示图标 12345678menu_icons: enable; true home: home about: user categories: th tags: tags archives: archive commonweal: hearbeat 设置头像编辑站点配置文件, 新增字段avatar, 值设置成头像的链接地址, 其中头像的链接地址可以是: 地址 值 完整的互联网URL https://example.com/avatar.png 站内地址 比如source/images/目录下, 配置为: avatar: /images/avatar.png 增加评论增加百度统计增加阅读量增加搜索主题配置增加「标签」页面 新建页面 1hexo new page tags 设置页面类型编辑刚新建的页面, 将页面的类型设置为tags 123title: 标签date: 2016-12-17 17:02:23type: &quot;tags&quot; 修改菜单在菜单中添加链接, 编辑主题配置文件,在menu中添加tags 1234menu: home: / archives: archives tags: /tags 隐藏评论如果开启了多说评论, 需要关闭的话, 添加comments, 并将值设置为false 1234title: 标签date: 2016-12-17 17:02:23type: &quot;tags&quot;comments: false 代码高亮Next 使用Tomorrow Theme作为代码高亮, 共有5款主题可以选择, 可选值有normal, night, night blue, night bright, night eighties: 默认是normal更改highlight_theme字段, 设置成所喜欢的高亮主题 侧边栏社交链接侧边栏社交链接包含两个部分, 第一是链接,第二是图标, 两者配置均在主题配置文件中 链接放置在social字段下, 一行一个链接, 键值格式是 显示文本: 链接地址 1234social: GitHub: https://github.com/your-user-name 微博: http://weibo.com/your-user-name # ... 设定链接的图标,对应的字段是social_icons,其键值格式是 匹配键: Font Awesome, 匹配键与上一步所配置的显示文本相同 1234social_icons: enable: true GitHub: github 微博: weibo 开启打赏只需要在主题配置文件中填入微信和支付宝收款二维码图片地址即可开启该功能1234wechat_subscriber: enabled: true qcode: /images/WechatRecvMoney.jpg description: 您的支持将鼓励我继续创作! 友情链接编辑主题配置文件添加:123links_title: Linkslinks: MacTalk: http://macshuo.com/ 多说评论显示UA在每一条多说评论后显示评论者使用的代理信息,要启用此功能,需要配置duoshuo_info字段12345duoshuo_info: ua_enable: true # 启用UA admin_enable: true # 是否展示&quot;博主&quot;文字 user_id: 你自己的多说userid admin_nickname: 博主 # 要显示的字段 admin_enable用于展示「博主」文字,表明评论者是博主, 此字段需要user_id 和admin_nickname字段,user_id可以在登录多说后,并点击「我的主页」,user_id是网址最后面那串数字 SEOsitemap给你的hexo站点添加sitemap网站地图 安装hexo的sitemap网站地图生成插件 12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 编辑站点配置文件 12345# sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 配置成功后, hexo编译后会在站点根目录下生成sitemap.xml和baidusitemap.xml 更多内容请去Next官网查看]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[多台电脑同步博客]]></title>
      <url>%2F2016%2F12%2F11%2Fsync-blog-on-multiple-computers%2F</url>
      <content type="text"><![CDATA[hexo写博客,确实减少了维护博客投入的精力,但我们大多数不可能一直在同一台写博客,所以同步hexo生成的博客势在必行 准备工作这里假设, 原来更新博客的电脑是A, 新电脑是B A电脑准备 cd gitblog git init git remote add origin git@github.com:liujinlingchn/.github.io.git git checkout -b hexo //新建分支并hexo切换到hexo分支 git add . git commit -m “first commit” git push origin hexo 到这步, 就已经把当前目录下的所有文件同步到hexo分支下了如果自己想过滤敏感信息, 自己设置.gitignore B电脑操作 安装git 安装nodejs npm install -g hexo-cli git clone -b hexo git@github.com:liujinlingchn/.github.io.git cd .github.io npm install npm install hexo-deployer-git –save 此时, B电脑环境配置完毕, 和A电脑一样了, 可以发布文章并推送了每次在操作前, 要记得先更新下当前仓库 多环境操作问题集合FATAL error: The requested URL returned error: 403 Forbidden while accessing https://github.com/xxx/xxx.github.io.git/info/refs出现这种问题, 应该是_config配置中的仓库地址和添加远程地址的方式不一致, 比如repo是https, 但是在git remote add origin时使用的是ssh方式, 因此把_config中repo修改成一致, 要么是https, 要么是ssh方式]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F02%2Fhello-world%2F</url>
      <content type="text"><![CDATA[借助HEXO和GITHUB的帮助, 终于完成了一个简易”博客”.本博客主要用于记录个人编程学习的一些知识点, 排版可能欠佳如此, 亮剑吧]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[利用hexo生成github-page页面]]></title>
      <url>%2F2016%2F12%2F02%2Fgen-github_page-byhexo%2F</url>
      <content type="text"><![CDATA[利用hexo编辑文章, 并上传到github生成静态网页的常见命令 添加一个网页 生成一个markdown文章 123hexo new [layout] &apos;page-name&apos;# 这个page-name是文章最终路径名, 而不是文章的标题, 文章的标题需要在最上方的title上修改# 如果没有设置layout, 使用_config.yml中的default_layout参数代替 执行上个命令后, 会提示md文件生成的位置, 编辑这个文件, 可以在tags编辑标签, 多个标签用[] 生成 1hexo generate 测试 12hexo server# 运行后, 可以在本地访问127.0.0.1:4000 , 看是否是自己期望的样式, 如果不是重复步骤2 如果是自己期望的, 就可以上传到github上 1hexo deploy 常见问题 如何在页面显示阅读全文需要在想隐藏内容上面加上一行 1&lt;!--more--&gt; &lt;!--more--&gt; 如何在文章中加入图片最简单的方式是在source中加入一个images文件夹, 然后在想要引入的地方使用看官网, 这样貌似不好, 但目前没发现, 有问题再修正 1![](/images/img-name.jpg)]]></content>
    </entry>

    
  
  
</search>
